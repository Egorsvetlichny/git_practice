# Основные метасимволы, которые используются для составления Regex-шаблонов

import re

# [] – определяет набор (или диапазон) символов
string = 'Роман "Война и мир", автор - Лев Николаевич Толстой'
print(re.findall(r'[о-с]', string, re.I))
print(re.findall(r'[абвлнт]', string, re.I))
print()

# \ – задает начало последовательности, а также экранирует служебные символы
string = 'www.google.com, www.yandex.ru'
print(re.findall(r'.com\b', string))
print()

# . – соответствует любому символу, кроме \n
string = 'Python\n'
print(re.findall(r'.', string))
print()

# ^ – определяет, начинается ли строка с определенного символа (слова, набора слов или символов).
# При совместном использовании с [], напротив, игнорирует набор заданных символов
string = 'Регулярные выражения в Python'
print(re.match(r'^р', string, re.I))
print(re.findall(r'регулярные^[pyt]', string, re.I))
print()

# $ – определяет, заканчивается ли строка нужным словом, символов или набором символов
string1, string2 = 'JavaScript', 'Python'
print(re.search(r'pt$', string2, re.I))
print(re.search(r'pt$', string1, re.I))
print()

# .* – используется для поиска любого количества любых символов, кроме \n
string = "<p>Hello, World!</p>"
print(re.findall(r'<p>(.*)</p>', string)[0])
print()

# .+ – соответствует любой строке, которая содержит хотя бы один символ, кроме \n
string = '''<h2>Пример использования регулярного выражения</h2><p>Другой пример</p>
<p>Третий пример с новой строки</p>'''
print(re.search(r'<p>.+</p>', string))
print()

# ? – обнаруживает наличие 0 или 1 совпадения с шаблоном,
# а также нейтрализует «жадные» выражения с метасимволами ., *, и +
string = 'инновационный'
print(re.findall(r'.?нн', string))
print()

# {} – ищет точное число совпадений, которое указывается в скобках
string = 'паллиативный, плеоназм, баллистическая, конгрегация, аллопеция'
print(re.findall(r'л{2}', string))
print()

# | – обнаруживает совпадение с любым из указанных вариантов
string = 'есть карандаши двух цветов - красные и синие'
print(re.findall(r'красные|синие', string))
print()

# () – выделяет группу символов
string = 'адреса наших сайтов - www.site1.ru, www.site2.com, www.site3.io'
print(re.sub(r'(www.)', r'https://', string))
print()

# <> – используется для работы с именованными группами
string = 'января 12, 2002'
pattern = r'^(?P<месяц>\w+)\s(?P<день>\d+)\,?\s(?P<год>\d+)'
match = re.search(pattern, string)
print(f'Писатель родился в {match.group("год")} году, {match.group("день")} {match.group("месяц")}.')
print()
