# Напишите программу, которая получает от пользователя строку с IP-адресом и определяет, является ли этот адрес:
# - корректным IPv4-адресом;
# - корректным IPv6-адресом;
# - адресом некорректного формата.

# Корректный IPv4-адрес соответствует формату x1.x2.x3.x4, где 0 <= xi <= 255, и не содержит ведущих нулей.
# В корректный IPv6-адрес, состоящий из 128 битов, входят восемь групп из четырех шестнадцатеричных цифр;
# группы разделены двоеточиями.

import re


def ip_validation(ip_address: str) -> str:
    if re.fullmatch(r"""(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}  # выделяем первые 3 байта
                    ([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])  # выделяем последний байт
                    """, ip_address, re.X):
        return f'IP-адрес: {ip_address} - корректный IPv4-адрес'
    elif re.fullmatch(r"""((([0-9a-fA-F]){1,4}):){7}  # выделяем первые 14 байт
                     ([0-9a-fA-F]){1,4}  # выделяем последние 2 байта
                     """, ip_address, re.X):
        return f'IP-адрес: {ip_address} - корректный IPv6-адрес'
    else:
        return f'IP-адрес: {ip_address} - некорректен!'


def main():
    ip_addresses = ['192.168.1.0', '2001:0db8:85a3:0000:0000:8a2e:0370:7334', '192.168.1.000',
                    '00.168.1.0', '255.255.255.255', '2001:0gb8:85a3:0000:0000:8a2e:0370:7334',
                    '2001:0db8:85a3:00000:0000:8a2e:0370:7334', 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff']

    [print(ip_validation(ip)) for ip in ip_addresses]


if __name__ == '__main__':
    main()
